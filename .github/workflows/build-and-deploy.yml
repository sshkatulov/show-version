name: CI

on:
  push:
    branches: [ "main" ]

permissions: write-all

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Get Latest Tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          echo "::set-output name=latest_tag::$latest_tag"

      - name: Create New Tag
        id: create_tag
        run: |
          version=$(echo ${{ steps.get_tag.outputs.latest_tag }} | awk -F. '{print $1"."$2"."$3 + 1}')
          git tag $version
          echo "::set-output name=new_tag::$version"

      - name: Push Tag to Repository
        run: git push origin ${{ steps.create_tag.outputs.new_tag }}

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Install Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       - name: Install dependencies
#         run: npm install

#       - name: Build
#         run: npm run build

#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@latest
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.ref }}
#           release_name: Release ${{ github.ref }}
#           draft: false
#           prerelease: false

#       - name: Set version
#         run: echo "REACT_APP_VERSION=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

#       # - name: Push git tags
#       #   run: |
#       #     git config --global user.email "actions@github.com"
#       #     git config --global user.name "GitHub Actions"
#       #     git tag -a $REACT_APP_VERSION -m "Automatically created by GitHub Actions"
#       #     git push --tags

#       - name: Print version
#         run: |
#           echo "Version: $REACT_APP_VERSION"

#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v2
#         with:
#           path: ./build

  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v3
